Im Regelfall benötigt ihr für jedes Script immer 2 LCD.
Das erste Script-LCD mit dem Code den ihr kopiert habt oder selber schreibt MUSS immer <color=yellow>Script:</color> am Anfang haben, gefolgt von einem <i>beschreibenden</i> Namen, denselben Name gebt ihr für das Ausgabe-LCD an.

Zum Beispiel: ("Decon" ist hier nur ein Namens beispiel!)
* Script:Decon 		(Script-LCD)
* Decon			(Ausgabe-LCD)

Das Script-LCD stellt ihr am besten irgendwo auf, wo ihr es nicht die ganze Zeit seht, z.B. im Maschienenraum.
Im gegensatzt dazu stellt ihr das Ausgabe-LCd dort auf wo es am meisten Sinn macht, z.B. über/an der Kiste oder dem Kühlschrank.

Auf welcher Struktur (BA, CV, HV, SV) ihr ein Script verwendet ist egal, wichtig ist das ihr die LCDs einer Gruppe hinzufügt - achtet dabei darauf ob eure Strukur manuel oder automatisch sortiert wurde!

---------------

Sobald ihr Scripte habt die mit Zeit oder Namen arbeiten, bzw mit {{i18n Key SPRACHE}}, könnt ihr die SPRACHE löschen und dafür ein LCD aufstellen und mit CultureInfo benennen. (ohne das 'Script:' prefix)
Dieses sollte sich dann automatisch mit folgendem Text/Code füllen:
<color=green>{
  "LanguageTag": "de-CH",
  "i18nDefault": "Deutsch",
  "UTCplusTimezone": 2
}</color>

Über den LanguageTag könnt ihr Formatierungen ändern, z.b. 1000er Trennzeichen.
Bei i18nDefault ändert ihr die Sprache welche mit <color=yellow>{{i18n key}}</color> angezeigt werden soll.
UTCplusTimezone dient dazu die Zeitangaben zu korrigieren, da wir hier in D/A/CH bei GMT+2 wohnen, tragen wir hier 2 ein. 
Andere Länder nutzen ihren jeweiligen Time-Offset.

-------------------------

Scripte die mit move oder fill arbeiten, sollten nach dem Doppelpunkt immer ein [+ZAHL] habe.
Wobei die ZAHL für die Anzahl steht, wieviele Zeilen auf der Ausgabe "gespeichert", bzw "oben angehängt" werden sollen.
Zum Beispiel:
* Script:[+6]FillMe
* FillMe
Dies würde 6 Zeilen des Füll-Befehls anzeigen, ohne dieses [+6] hättet ihr lediglich einen leeren Ausgabe-LCD.
Da der Befehl nur während der Aktion einen Text anzeigt, durch dieses [+6] erhaltet ihr sozusagen ein "log file".

--------------

Wenn ihr bei Scripten ein * am Schluss des Namens macht, könnt ihr bei den Ausgabe-LCDs einfach den Name + irgend etwas anstelle des * verwenden.

Zum Beispiel:
* Script:Zeit*
* Zeit1
* Zeit 99

----------------

Syntax
Jeder Befehl muss geschlossen werden.
Alle Scriptbefehlen haben geschweifte klammern {{befehl}}, dann kommt Code der Ausgeführt wird, danach wird er geschlossen mit {{/befehl}}.
Man kann das ganze verschachteln, dann muss er 2te Befehl vor dem 1sten Befehl geschlossen werden.

Pseudo Script:
<color=green>   {{#cmd1 arg1 arg2}}
	   {{#cmd2}}
		   Ausgabe {{var}}
	   {{/cmd2}}
   {{/cmd1}}
</color>
Grunsätzlich gilt, jeder Scriptbefehl fängt mit '{{#' an.
Mit 'tilde' (~) kann man auf derselben Zeile schreiben ("{{~#cmd args}}"), während man ohne diese Zeichen, pro Befehl eine neue Zeile generiert/schreibt.

Sachen die eine Eigenschaft ändern, z.b {{bgcolor #hex}} oder das {{else}} sind hierbei die Ausnahme.

--------------

Um Server / oder euren Rechner performance technisch etwas zu schonen, könnt ihr die Script auch dekaktivieren.
Dies wird durch einfaches ein-/ausschalten des LCD gemacht.

Dazu könnt ihr einfach ein Signal Block nehmen, und diese entweder auf Schalter lassen oder auf Sensor ändern.
Dort setzt ihr ein TX Signal (im Register: "Signal Logik"), dieses wählt ihr im Drop-Down des LCD aus, und lasst es auf "Follow".

Wenn ihr 2 LCD's hin und her schalten wollt, weist ihr beiden LCDs dasselbe Signal eines Schalters oder Sensors zu, dann müsst ihr beim 2ten LCD die Checkbox "I:" auswählen, da das "I" für Invertiert, also "umgekehrt" steht.

---------------

Ihr werdet an einigen Stellen <color=yellow>@root</color> sehen.
Dieses wird verwendet um entweder Variablen abzurufen, oder um wieder auf die Hauptstruktur zuzugreifen wenn ihr innerhalb einer Verschachtelung seit.
